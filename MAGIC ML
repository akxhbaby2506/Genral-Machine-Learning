{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNmIL0wYpw2iT/G8NYcWUaF"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":46,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xi2YoXgTo-_p","executionInfo":{"status":"ok","timestamp":1683263444315,"user_tz":-330,"elapsed":346,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}},"outputId":"c823277c-5295-4e55-fe88-15a2c5c56535"},"outputs":[{"output_type":"stream","name":"stdout","text":["        flength    fwidth   fSize   fConc  fConci     fAaym   fMJLong  \\\n","0       28.7967   16.0021  2.6449  0.3918  0.1982   27.7004   22.0110   \n","1       31.6036   11.7235  2.5185  0.5303  0.3773   26.2722   23.8238   \n","2      162.0520  136.0310  4.0612  0.0374  0.0187  116.7410  -64.8580   \n","3       23.8172    9.5728  2.3385  0.6147  0.3922   27.2107   -6.4633   \n","4       75.1362   30.9205  3.1611  0.3168  0.1832   -5.5277   28.5525   \n","...         ...       ...     ...     ...     ...       ...       ...   \n","19015   21.3846   10.9170  2.6161  0.5857  0.3934   15.2618   11.5245   \n","19016   28.9452    6.7020  2.2672  0.5351  0.2784   37.0816   13.1853   \n","19017   75.4455   47.5305  3.4483  0.1417  0.0549   -9.3561   41.0562   \n","19018  120.5135   76.9018  3.9939  0.0944  0.0683    5.8043  -93.5224   \n","19019  187.1814   53.0014  3.2093  0.2876  0.1539 -167.3125 -168.4558   \n","\n","       fMKTrans   fAlpha     fDist class  \n","0       -8.2027  40.0920   81.8828     g  \n","1       -9.9574   6.3609  205.2610     g  \n","2      -45.2160  76.9600  256.7880     g  \n","3       -7.1513  10.4490  116.7370     g  \n","4       21.8393   4.6480  356.4620     g  \n","...         ...      ...       ...   ...  \n","19015    2.8766   2.4229  106.8258     h  \n","19016   -2.9632  86.7975  247.4560     h  \n","19017   -9.4662  30.2987  256.5166     h  \n","19018  -63.8389  84.6874  408.3166     h  \n","19019   31.4755  52.7310  272.3174     h  \n","\n","[19020 rows x 11 columns]\n"]}],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from sklearn.preprocessing import StandardScaler\n","from imblearn.over_sampling import RandomOverSampler\n","\n","cols = [\"flength\",\"fwidth\",\"fSize\",\"fConc\",\"fConci\",\"fAaym\",\"fMJLong\",\"fMKTrans\",\"fAlpha\",\"fDist\",\"class\"]\n","df = pd.read_csv(\"magic04.data\",names=cols)\n","print(df)"]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"euLCKZ5ebLSh","executionInfo":{"status":"ok","timestamp":1683263450222,"user_tz":-330,"elapsed":695,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}},"outputId":"9aeef707-7eab-40ba-c10a-a166b7082ca3"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    flength    fwidth   fSize   fConc  fConci     fAaym  fMJLong  fMKTrans  \\\n","0   28.7967   16.0021  2.6449  0.3918  0.1982   27.7004  22.0110   -8.2027   \n","1   31.6036   11.7235  2.5185  0.5303  0.3773   26.2722  23.8238   -9.9574   \n","2  162.0520  136.0310  4.0612  0.0374  0.0187  116.7410 -64.8580  -45.2160   \n","3   23.8172    9.5728  2.3385  0.6147  0.3922   27.2107  -6.4633   -7.1513   \n","4   75.1362   30.9205  3.1611  0.3168  0.1832   -5.5277  28.5525   21.8393   \n","\n","    fAlpha     fDist class  \n","0  40.0920   81.8828     g  \n","1   6.3609  205.2610     g  \n","2  76.9600  256.7880     g  \n","3  10.4490  116.7370     g  \n","4   4.6480  356.4620     g  "],"text/html":["\n","  <div id=\"df-da38759a-9656-4fd2-9954-27ca80839ae6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>flength</th>\n","      <th>fwidth</th>\n","      <th>fSize</th>\n","      <th>fConc</th>\n","      <th>fConci</th>\n","      <th>fAaym</th>\n","      <th>fMJLong</th>\n","      <th>fMKTrans</th>\n","      <th>fAlpha</th>\n","      <th>fDist</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>28.7967</td>\n","      <td>16.0021</td>\n","      <td>2.6449</td>\n","      <td>0.3918</td>\n","      <td>0.1982</td>\n","      <td>27.7004</td>\n","      <td>22.0110</td>\n","      <td>-8.2027</td>\n","      <td>40.0920</td>\n","      <td>81.8828</td>\n","      <td>g</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>31.6036</td>\n","      <td>11.7235</td>\n","      <td>2.5185</td>\n","      <td>0.5303</td>\n","      <td>0.3773</td>\n","      <td>26.2722</td>\n","      <td>23.8238</td>\n","      <td>-9.9574</td>\n","      <td>6.3609</td>\n","      <td>205.2610</td>\n","      <td>g</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>162.0520</td>\n","      <td>136.0310</td>\n","      <td>4.0612</td>\n","      <td>0.0374</td>\n","      <td>0.0187</td>\n","      <td>116.7410</td>\n","      <td>-64.8580</td>\n","      <td>-45.2160</td>\n","      <td>76.9600</td>\n","      <td>256.7880</td>\n","      <td>g</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>23.8172</td>\n","      <td>9.5728</td>\n","      <td>2.3385</td>\n","      <td>0.6147</td>\n","      <td>0.3922</td>\n","      <td>27.2107</td>\n","      <td>-6.4633</td>\n","      <td>-7.1513</td>\n","      <td>10.4490</td>\n","      <td>116.7370</td>\n","      <td>g</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>75.1362</td>\n","      <td>30.9205</td>\n","      <td>3.1611</td>\n","      <td>0.3168</td>\n","      <td>0.1832</td>\n","      <td>-5.5277</td>\n","      <td>28.5525</td>\n","      <td>21.8393</td>\n","      <td>4.6480</td>\n","      <td>356.4620</td>\n","      <td>g</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-da38759a-9656-4fd2-9954-27ca80839ae6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-da38759a-9656-4fd2-9954-27ca80839ae6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-da38759a-9656-4fd2-9954-27ca80839ae6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["df[\"class\"] = (df[\"class\"] == \"g\").astype(int)\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"gMboCnv8a5dJ","executionInfo":{"status":"ok","timestamp":1683262975703,"user_tz":-330,"elapsed":499,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}},"outputId":"e7bf70b9-93ba-463c-f1da-9a957ab8a46d"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    flength    fwidth   fSize   fConc  fConci     fAaym  fMJLong  fMKTrans  \\\n","0   28.7967   16.0021  2.6449  0.3918  0.1982   27.7004  22.0110   -8.2027   \n","1   31.6036   11.7235  2.5185  0.5303  0.3773   26.2722  23.8238   -9.9574   \n","2  162.0520  136.0310  4.0612  0.0374  0.0187  116.7410 -64.8580  -45.2160   \n","3   23.8172    9.5728  2.3385  0.6147  0.3922   27.2107  -6.4633   -7.1513   \n","4   75.1362   30.9205  3.1611  0.3168  0.1832   -5.5277  28.5525   21.8393   \n","\n","    fAlpha     fDist  class  \n","0  40.0920   81.8828      1  \n","1   6.3609  205.2610      1  \n","2  76.9600  256.7880      1  \n","3  10.4490  116.7370      1  \n","4   4.6480  356.4620      1  "],"text/html":["\n","  <div id=\"df-4344f77d-a471-4302-b3cf-7fb6bb879677\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>flength</th>\n","      <th>fwidth</th>\n","      <th>fSize</th>\n","      <th>fConc</th>\n","      <th>fConci</th>\n","      <th>fAaym</th>\n","      <th>fMJLong</th>\n","      <th>fMKTrans</th>\n","      <th>fAlpha</th>\n","      <th>fDist</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>28.7967</td>\n","      <td>16.0021</td>\n","      <td>2.6449</td>\n","      <td>0.3918</td>\n","      <td>0.1982</td>\n","      <td>27.7004</td>\n","      <td>22.0110</td>\n","      <td>-8.2027</td>\n","      <td>40.0920</td>\n","      <td>81.8828</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>31.6036</td>\n","      <td>11.7235</td>\n","      <td>2.5185</td>\n","      <td>0.5303</td>\n","      <td>0.3773</td>\n","      <td>26.2722</td>\n","      <td>23.8238</td>\n","      <td>-9.9574</td>\n","      <td>6.3609</td>\n","      <td>205.2610</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>162.0520</td>\n","      <td>136.0310</td>\n","      <td>4.0612</td>\n","      <td>0.0374</td>\n","      <td>0.0187</td>\n","      <td>116.7410</td>\n","      <td>-64.8580</td>\n","      <td>-45.2160</td>\n","      <td>76.9600</td>\n","      <td>256.7880</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>23.8172</td>\n","      <td>9.5728</td>\n","      <td>2.3385</td>\n","      <td>0.6147</td>\n","      <td>0.3922</td>\n","      <td>27.2107</td>\n","      <td>-6.4633</td>\n","      <td>-7.1513</td>\n","      <td>10.4490</td>\n","      <td>116.7370</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>75.1362</td>\n","      <td>30.9205</td>\n","      <td>3.1611</td>\n","      <td>0.3168</td>\n","      <td>0.1832</td>\n","      <td>-5.5277</td>\n","      <td>28.5525</td>\n","      <td>21.8393</td>\n","      <td>4.6480</td>\n","      <td>356.4620</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4344f77d-a471-4302-b3cf-7fb6bb879677')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4344f77d-a471-4302-b3cf-7fb6bb879677 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4344f77d-a471-4302-b3cf-7fb6bb879677');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["for label in cols[:-1]:\n","  plt.hist(df[df['class']==1][label], color = 'blue', label = 'gama', alpha=0.7, density=True)\n","  plt.hist(df[df['class']==0][label], color = 'red', label = 'hardon', alpha=0.7, density=True)\n","  plt.title(label)\n","  plt.ylabel('Probability')\n","  plt.xlabel(label)\n","  plt.legend()\n","  plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"3aNOT4Na_dsS","executionInfo":{"status":"ok","timestamp":1683262982515,"user_tz":-330,"elapsed":3250,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}},"outputId":"8aa2d6c0-1c22-4039-968b-94acf21bee69"},"execution_count":25,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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JDVr1qzSjk2gAgCgHBQWFpphqmnTps4up9aqX7++JCkjI0O+vr6VdvmPSekAAJSDa3OmPDw8nFwJrn0PKnMeG4EKAIByxGU+53PG94BABQAAYBGBCgAAwCImpQMAUIH69q3c423YULnHwy8YoQIAALCIQAUAQC13+fJlDR06VA0aNFCzZs30yiuvqGfPnpowYYIk6d1331WXLl3UqFEj+fv76+GHHzbv9SRJ27Ztk81m06effqrOnTurfv36uvvuu5WRkaFPPvlE7dq1k6enpx5++GFduXLF3G7Tpk3q0aOHvL291bRpU91///06efJkZZ9+uSBQAQBQy8XHx+vLL7/URx99pM2bN+vf//639u7da64vKCjQc889p6+++krr16/X6dOn9cgjjxTZz6xZs7R48WLt3LlTZ86c0cCBAzV//nytXLlS//rXv/TZZ59p0aJFZvucnBzFx8drz549SkpKkouLix588EHZ7fbKOO1yxRyqaq6yr83fCNfuAaB6uXz5st5++22tXLlSvXr1kiQtW7ZMAQEBZps///nP5tetWrXSwoULddttt+mnn35Sw4YNzXXPP/+8br/9dknSyJEjNW3aNJ08eVKtWrWSJP3hD3/Q1q1bNWXKFEnSgAEDHGp56623dNNNN+nIkSMKCwurmBOuIIxQAQBQi33zzTcqKChQ165dzWVeXl5q06aN+T41NVV9+/ZVixYt1KhRI0VHR0uS0tLSHPbVsWNH82s/Pz95eHiYYerast9eKjx+/LiGDBmiVq1aydPTU8HBwcXutzogUAEAgOvKyclRbGysPD09tWLFCu3evVsffPCBJCk/P9+hbd26dc2vbTabw/try357Oa9v3766dOmS3njjDaWkpCglJaXY/VYHBCoAAGqxVq1aqW7dutq9e7e5LCsrS//9738lSUePHtXFixc1e/Zs3XHHHWrbtq3DKFNZXbx4UceOHdP06dPVq1cvtWvXTj/++KPl/ToLc6gAAKjFGjVqpOHDh+vJJ59UkyZN5Ovrq4SEBLm4uMhms6lFixZyc3PTokWL9Nhjj+nQoUN67rnnLB+3cePGatq0qV5//XU1a9ZMaWlpmjp1ajmckXMwQgUAQC338ssvKyoqSvfff79iYmJ0++23q127dnJ3d9dNN92k5cuXa82aNWrfvr1mz56tl156yfIxXVxctGrVKqWm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7rlHTZs2lc1m0/79+4vso2fPnrLZbA6vxx57rDxPCwAA1CJODVSrV69WfHy8EhIStHfvXnXq1EmxsbHKyMgotv3OnTs1ZMgQjRw5Uvv27VNcXJzi4uJ06NAhs01OTo569OihOXPm/O6xR40apXPnzpmvuXPnluu5AQCA2sNmGIbhrINHRkbqtttu0+LFiyVJdrtdQUFBGjdunKZOnVqk/aBBg5STk6ONGzeay7p166bw8HAtXbrUoe3p06cVEhKiffv2KTw83GFdz549FR4ervnz55e59uzsbHl5eSkrK0uenp5l3o9Vffs67dDF2rDB2RUAAHB9FfX722kjVPn5+UpNTVVMTMyvxbi4KCYmRsnJycVuk5yc7NBekmJjY6/b/vesWLFCPj4+CgsL07Rp03TlypVS7wMAAECS6jjrwD/88IMKCwvl5+fnsNzPz09Hjx4tdpv09PRi26enp5fq2A8//LBatmypgIAAHThwQFOmTNGxY8e0bt26626Tl5envLw88312dnapjgkAAGoupwUqZxo9erT5dYcOHdSsWTP16tVLJ0+eVOvWrYvdJjExUc8880xllQgAAKoRp13y8/Hxkaurq86fP++w/Pz58/L39y92G39//1K1L6nIyEhJ0okTJ67bZtq0acrKyjJfZ86csXRMAABQczgtULm5uSkiIkJJSUnmMrvdrqSkJEVFRRW7TVRUlEN7Sdq8efN125fUtVsrNGvW7Lpt6tWrJ09PT4cXAACA5ORLfvHx8Ro+fLi6dOmirl27av78+crJydGIESMkScOGDVNgYKASExMlSePHj1d0dLTmzZunPn36aNWqVdqzZ49ef/11c5+XLl1SWlqazp49K0k6duyYpF9Gt/z9/XXy5EmtXLlS9913n5o2baoDBw5o4sSJuvPOO9WxY8dK7gEAAFATODVQDRo0SBcuXNDMmTOVnp6u8PBwbdq0yZx4npaWJheXXwfRunfvrpUrV2r69Ol6+umnFRoaqvXr1yssLMxs89FHH5mBTJIGDx4sSUpISNCsWbPk5uamzz//3AxvQUFBGjBggKZPn15JZw0AAGoap96HqjrjPlTF4z5UAICqrMbdhwoAAKCmIFABAABYRKACAACwiEAFAABgEYEKAADAIgIVAACARQQqAAAAiwhUAAAAFhGoAAAALCJQAQAAWESgAgAAsIhABQAA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7NkilzQBAABKymYYhlHajXJycjRu3Di98847stvtkiRXV1cNGzZMixYtkoeHR4n2ExkZqdtuu02LFy+WJNntdgUFBWncuHGaOnVqkfaDBg1STk6ONm7caC7r1q2bwsPDtXTpUoe2p0+fVkhISJERqqysLN10001auXKl/vCHP0iSjh49qnbt2ik5OVndunUrUe3Z2dny8vJSVlaWPD09S7RNifXtW+Kmu3aV76HL6rmuGyRJGzY4uRAAAH5HRf3+LtMIVXx8vLZv364NGzYoMzNTmZmZ+vDDD7V9+3ZNmjSpRPvIz89XamqqYmJifi3GxUUxMTFKTk4udpvk5GSH9tIvzxW8XvvipKamqqCgwGE/bdu2VYsWLX53P3l5ecrOznZ4AQAASGUMVP/85z/197//Xffee688PT3l6emp++67T2+88YbWrl1bon388MMPKiwsLDJvyc/PT+np6cVuk56eXqr219uHm5ubvL29S7WfxMREeXl5mS8m4QMAgGvKFKiuXLlS7ARuX19fXblyxXJRVdG0adOUlZVlvq49FBoAAKBMgSoqKkoJCQnKzc01l/3888965plnzGf73YiPj49cXV11/vx5h+Xnz5+Xv79/sdv4+/uXqv319pGfn6/MzMxS7adevXrmaNy1FwAAgFTGQDV//nx9+eWXat68uXr16qVevXopKChIO3fu1IIFC0q0Dzc3N0VERCgpKclcZrfblZSUdN1QFhUV5dBekjZv3lziECdJERERqlu3rsN+jh07prS0tFLtBwAA4JoyPRy5Q4cOOn78uFasWKGjR49KkoYMGaKhQ4eqfv36Jd5PfHy8hg8fri5duqhr166aP3++cnJyNGLECEnSsGHDFBgYqMTEREnS+PHjFR0drXnz5qlPnz5atWqV9uzZo9dff93c56VLl5SWlqazZ89K+iUsSb+MTPn7+8vLy0sjR45UfHy8mjRpIk9PT40bN05RUVEl/gs/AACA3yp1oCooKFDbtm21ceNGjRo1ytLBBw0apAsXLmjmzJlKT09XeHi4Nm3aZM7PSktLk4vLr4No3bt318qVKzV9+nQ9/fTTCg0N1fr16xUWFma2+eijj8xAJkmDBw+WJCUkJGjWrFmSpFdeeUUuLi4aMGCAw409AQAAyqJM96EKDAzU559/rnbt2lVETdUC96FyxH2oAADVQZW6D9WY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\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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YMECtWvXTl5eXqpTp4769u2rtLQ0e/8NGzbIYrFo9erVuummm1StWjXddtttSktL05dffqnmzZvL29tbffv21fnz5+39Vq1apVtuuUW+vr667rrrdM899+jAgQNlvfn5ItwAAFCBxcbGatOmTfr888+1Zs0aff3119q+fbv985ycHE2cOFE//vijli1bpsOHD2vQoEFXrCc+Pl7Tp0/X5s2bdeTIET344IOaNm2aFi1apBUrVuirr77SW2+9ZV8+MzNTsbGx+v7775WYmCgXFxf94x//kNVqLYvNvirm3KBiKusT4Y7AyXQADnb27FnNnz9fixYtUrdu3SRJc+fOVb169ezLPPLII/a/Q0JC9Oabb6p9+/Y6d+6catSoYf/spZdeUseOHSVJQ4YM0ejRo3XgwAGFhIRIkh544AGtX79eL7zwgiTp/vvvz1PLnDlzVLt2bf3yyy9q2bJl6WxwITFyAwBABXXw4EHl5OQoPDzc3ubj46OmTZva3ycnJysmJkYNGjSQl5eXOnfuLElKSUnJs67Q0FD73wEBAfL09LQHm0ttfz+dtW/fPvXp00chISHy9vZWcHBwvut1BsINAACGyszMVHR0tLy9vbVw4UJt27ZNn376qSQpOzs7z7J/f9yBxWK54vEHFoslzymnmJgYnT59Wu+9956+++47fffdd/mu1xkINwAAVFAhISGqWrWqtm3bZm9LT0/Xr7/+Kknas2ePTp06pUmTJqlTp05q1qxZntGX4jp16pT27t2rMWPGqFu3bmrevLn++OOPEq/XUZhzAwBABeXl5aWBAwfqf/7nf1SrVi35+/srLi5OLi4uslgsatCggdzc3PTWW2/piSee0M8//6yJEyeW+Htr1qyp6667Tu+++67q1q2rlJQUjRo1ygFb5BiM3AAAUIFNnTpVkZGRuueeexQVFaWOHTuqefPm8vDwUO3atTVv3jx9/PHHatGihSZNmqQpU6aU+DtdXFy0ePFiJScnq2XLlho5cqRee+01B2yNY1hsNpvN2UWUpYyMDPn4+Cg9PV3e3t7OLgfFxdVSABzkwoULOnTokBo1aiQPDw9nl1NimZmZCgwM1Ouvv64hQ4Y4u5wiudq/RVF+vzkthTzKe2YgHwBAXj/88IP27Nmj8PBwpaena8KECZKkHj16OLky5yHcAABQwU2ZMkV79+6Vm5ubwsLC9PXXX8vPz8/ZZTkN4QYAgArspptuUnJysrPLKFeYUAwAAIxCuAEAAEYh3AAAAKMQbgAAgFEINwAAwCiEGwAAYBTCDQAAFVSXLl307LPPlsl3BQcHa9q0aWXyXSXFfW4AAChIWd+2nduwOwQjNwAAQJKUm5srq9Xq7DJKjHADAEAFZrVa9c9//lO1atVSnTp1FB8fb/9s6tSpatWqlapXr66goCA99dRTOnfunP3zefPmydfXV59//rlatGghd3d3paSkKC0tTTExMapWrZoaNWqkhQsXXvG9KSkp6tGjh2rUqCFvb289+OCDSk1NtX8eHx+vNm3aaMGCBQoODpaPj48eeughnT17tlT3h0S4AQCgQps/f76qV6+u7777TpMnT9aECRO0Zs0aSZKLi4vefPNN7dq1S/Pnz9e6dev0z3/+M0//8+fP69VXX9Xs2bO1a9cu+fv7a9CgQTpy5IjWr1+vpUuXaubMmUpLS7P3sVqt6tGjh06fPq2kpCStWbNGBw8eVO/evfOs+8CBA1q2bJm++OILffHFF0pKStKkSZNKfZ8w5wYAgAosNDRUcXFxkqQbbrhB06dPV2Jiom6//fY8k42Dg4P10ksv6YknntDMmTPt7Tk5OZo5c6Zat24tSfr111/15ZdfauvWrWrfvr0k6f3331fz5s3tfRITE7Vz504dOnRIQUFBkqQPPvhAN954o7Zt22bvZ7VaNW/ePHl5eUmS+vfvr8TERL388sult0PEyA0AABVaaGhonvd169a1j7KsXbtW3bp1U2BgoLy8vNS/f3+dOnVK58+fty/v5uaWZx27d+9WlSpVFBYWZm9r1qyZfH198ywTFBRkDzaS1KJFC/n6+mr37t32tuDgYHuwuby20kS4AQCgAqtatWqe9xaLRVarVYcPH9Y999yj0NBQ/ec//1FycrJmzJghScrOzrYvX61aNVksljKtrbQRbgAAMFBycrKsVqtef/113XzzzWrSpImOHj16zX7NmjXTxYsXlZycbG/bu3evzpw5Y3/fvHlzHTlyREeOHLG3/fLLLzpz5oxatGjh0O0oDsINAAAGuv7665WTk6O33npLBw8e1IIFCzRr1qxr9mvatKnuvPNOPf744/ruu++UnJysRx99VNWqVbMvExUVpVatWqlfv37avn27tm7dqgEDBqhz585q165daW5WoRBuAAAw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lZWll19+WcOHD3dYcQAAAEVV6NNS9913X573a9euVf369dW6dWtJ0o8//qjs7Gx169bNsRUCAAAUQaHDjY+PT573999/f573XAoOAADKg0KHm7lz55ZmHQAAAA5Ropv4nThxwv6gzKZNm6p27doOKQoAAKC4ijWhODMzU4888ojq1q2rW2+9Vbfeeqvq1aunIUOG6Pz5846uEQAAoNCKFW5iY2OVlJSk5cuX68yZMzpz5ow+++wzJSUl6bnnnnN0jQAAAIVWrNNS//nPf7R06VJ16dLF3nbXXXepWrVqevDBB7mJHwAAcJpijdycP39eAQEBV7T7+/tzWgoAADhVscJNZGSk4uLidOHCBXvbf//7X40fP97+rCkAAABnKNZpqWnTpunOO++84iZ+Hh4eWr16tUMLBAAAKIpihZtWrVpp3759Wrhwofbs2SNJ6tOnj/r166dq1ao5tEAAAICiKPJpqZycHDVu3Fi//fabhg4dqtdff12vv/66Hn300WIHmxkzZig4OFgeHh6KiIjQ1q1bC9Vv8eLFslgs6tmzZ7G+FwAAmKfI4aZq1ap55tqU1JIlSxQbG6u4uDht375drVu3VnR0tNLS0q7a7/Dhw3r++efVqVMnh9UCAAAqvmJNKB42bJheffVVXbx4scQFTJ06VUOHDtXgwYPVokULzZo1S56enpozZ06BfXJzc9WvXz+NHz9eISEhJa4BAACYo1hzbrZt26bExER99dVXatWqlapXr57n808++aRQ68nOzlZycrJGjx5tb3NxcVFUVJS2bNlSYL8JEybI399fQ4YM0ddff33V78jKylJWVpb9fUZGRqFqAwAAFVOxwo2vr+8VTwUvjpMnTyo3N/eKe+YEBATYJypf7ptvvtH777+vHTt2FOo7EhISNH78+JKWCgAAKogihRur1arXXntNv/76q7Kzs3XbbbcpPj6+zK6QOnv2rPr376/33ntPfn5+heozevRoxcbG2t9nZGQoKCiotEoEAABOVqRw8/LLLys+Pl5RUVGqVq2a3nzzTZ04ceKq82Ouxs/PT66urkpNTc3Tnpqaqjp16lyx/IEDB3T48GHFxMTY26xWqySpSpUq2rt3rxo3bpynj7u7u9zd3YtVHwAAqHiKNKH4gw8+0MyZM7V69WotW7ZMy5cv18KFC+0Bo6jc3NwUFhamxMREe5vValVi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9bgozr64nCnHxeV8fX3VpEmTArfL1GPCkZhz4yA2m03Dhw/Xp59+qnXr1qlRo0bX7BMZGanExMQ8bWvWrLnqPITyrjj74XK5ubnauXOn6tatWwoVOpfValVWVla+n5l4PFzN1fbF5Uw5Jrp166adO3dqx44d9le7du3Ur18/7dixI98fc1OPi+Lsi8uZclxc7ty5czpw4ECB22XqMeFQzp7RbIonn3zS5uPjY9uwYYPt2LFj9tf58+fty/Tv3982atQo+/tNmzbZqlSpYpsyZYpt9+7dtri4OFvVqlVtO3fudMYmOERx9sP48eNtq1evth04cMCWnJxse+ihh2weHh62Xbt2OWMTHGbUqFG2pKQk26FDh2w//fSTbdSoUTaLxWL76quvbDZb5TgeLinqvjD1mMjP5VcIVabj4nLX2hemHhfPPfecbcOGDbZDhw7ZNm3aZIuKirL5+fnZ0tLSbDZb5T4miotw4yCS8n3NnTvXvkznzp1tAwcOzNPvo48+sjVp0sTm5uZmu/HGG20rVqwo28IdrDj74dlnn7U1aNDA5ubmZgsICLDdddddtu3bt5d98Q72yCOP2Bo2bGhzc3Oz1a5d29atWzf7j7nNVjmOh0uKui9MPSbyc/kPemU6Li53rX1h6nHRu3dvW926dW1ubm62wMBAW+/evW379++3f16Zj4nisthsNptzxowAAAAcjzk3AADAKIQbAABgFMINAAAwCuEGAAAYhXADAACMQrgBAABGIdwAAACjEG4AlDs2m02PPfaYatWqJYvFoh07dlyzj8Vi0bJly0q9NgDlH+EGQLmzatUqzZs3T1988YWOHTumwMBAPfnkk2rQoIHc3d1Vp04dRUdHa9OmTfY+x44dy/N0ZQCVF08FB1DuXHpoYIcOHSRJt956q7KzszV//nyFhIQoNTVViYmJOnXqlL0PT0QGcAkjNwDKlUGDBunpp59WSkqKLBaLfH199fXXX+vVV19V165d1bBhQ4WHh2v06NG699577f3+floqPj5eFovlite8efMk/flE8oSEBDVq1EjVqlVT69attXTpUidsLYDSQLgBUK78+9//1oQJE1S/fn0dO3ZM+/btU40aNbRs2TJlZWUVah3PP/+8jh07Zn9NmTJFnp6eateunSQpISFBH3zwgWbNmqVdu3Zp5MiRevjhh5WUlFSamwagjHBaCkC54uPjIy8vL7m6utpPNc2bN09Dhw7VrFmz1LZtW3Xu3FkPPfSQQkND811HjRo1VKNGDUnSt99+qzFjxmj+/Plq2bKlsrKy9Morr2jt2rWKjIyUJIWEhOibb77RO++8o86dO5fNhgIoNYzcACj37r//fh09elSff/657rzzTm3YsEFt27a1n2YqSEpKinr27Knnn39eDz74oCRp//79On/+vG6//XZ7CKpRo4Y++OADHThwoAy2BkBpY+QGQIXg4eGh22+/XbfffrvGjh2rRx99VHFxcRo0aFC+y2dmZuree+9VZGSkJkyYYG8/d+6cJGnFihUKDAzM08fd3b3U6gdQdgg3ACqkFi1aFHhfG5vNpocfflhWq1ULFiyQxWLJ08/d3V0pKSmcggIMRbgBUK6dOnVKvXr10iOPPKLQ0FB5eXnp+++/1+TJk9WjR498+8THx2vt2rX66quvdO7cOftozaX5PM8//7xGjhwpq9WqW265Renp6dq0aZO8vb01cODAstw8AKWAcAOgXKtRo4YiIiL0xhtv6MCBA8rJyVFQUJCGDh2qF198Md8+SUlJOnfunP0+OZfMnTtXgwYN0sSJE1W7dm0lJCTo4MGD8vX1Vdu2bQtcH4CKxWKz2WzOLgIAAMBRuFoKAAAYhXADAACMQrgBAABGIdwAAACjEG4AAIBRCDcAAMAohBsAAGAUwg0AADAK4QYAABiFcAMAAIxCuAEAAEYh3AAAAKP8Pzq2qTa7qnAsAAAAAElFTkSuQmCC\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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hYXZH0uXLrX3ycjIUFZWlv15165dtXjxYs2ZM0dt27bV8uXLtWLFij9chAwAAKoOj7rOTUXgOjfmwHVuKgbXuQHgKSrtdW4AAACuF+EGAACYCuEGAACYCuEGAACYCuEGAACYCuEGAACYCuEGAACYCuEGAACYCuEGAACYCuEGAACYCuEGAACYCuEGAACYCuEGAACYCuEGAACYCuEGAACYCuEGAACYCuEGAACYCuEGAACYCuEGAACYCuEGAACYCuEGAACYSjV3FwDAcyUkuLsCx6xa5e4KAHgCwg0qpZfTKtmnrqTXo/nkBYCKwGkpAABgKoQbAABgKoQbAABgKqy5ASoI64QAoGIwcwMAAEyFmRsAV1XpZpsSxPfBATBzAwAAzIVwAwAATIVwAwAATIVwAwAATIVwAwAATIVwAwAATIVwAwAATIVwAwAATIVwAwAATIVwAwAATIVwAwAATIVwAwAATIVwAwAATIVwAwAATIVwAwAATIVwAwAATIVwAwAATIVwAwAATIVwAwAATIVwAwAATIVwAwAATIVwAwAATIVwAwAATIVwAwAATKWauwuAB0hIcHcFAAC4DDM3AADAVAg3AADAVAg3AADAVAg3AADAVAg3AADAVAg3AADAVAg3AADAVAg3AADAVAg3AADAVAg3AADAVAg3AADAVNwabrZu3aqEhASFh4fLYrFoxYoVf9h/8+bNslgsVzyys7MrpmAAAODx3BpuCgoK1LZtW82aNcuh7Q4dOqSsrCz7Izg4uJwqBAAAlY1b7wres2dP9ezZ0+HtgoODFRQU5PqCAABApVcp19y0a9dOYWFhuuuuu/TVV1/9Yd+LFy8qLy+vxAMAAJhXpQo3YWFhmj17tj7++GN9/PHHioiIUI8ePbRnz56rbpOSkiKr1Wp/REREVGDFAACgorn1tJSjmjZtqqZNm9qfd+3aVUeOHNHUqVO1cOHCUrcZO3askpKS7M/z8vIIOAAAmFilCjeliY6O1rZt2676uq+vr3x9fSuwIgAA4E6V6rRUafbu3auwsDB3lwEAADyEW2duzp07p8OHD9ufHzt2THv37lXt2rXVoEEDjR07VsePH9eCBQskSdOmTVNUVJRatmypCxcu6P3339fGjRu1fv16dx0CAADwMG4NN7t379btt99uf355bcygQYM0f/58ZWVlKSMjw/56YWGhxowZ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20V+fr6s13h/t4abunXrytvbWzk5OSXac3JyFBoaWuo2oaGhDvUfO3askpKS7M9tNptOnz6tOnXqyGKxOFxzXl6eIiIilJmZWS5rduA8xsYzMS6ei7HxTIxL6QzDUH5+vsLDw6/Z163hxsfHRx06dFBqaqr69Okj6bfwkZqaqhEjRpS6TUxMjFJTUzV69Gh724YNGxQTE1Nqf19fX/n6+pZoCwoKuu7aAwMD+Y/OQzE2nolx8VyMjWdiXK50rRmby9x+WiopKUmDBg1Sx44dFR0drWnTpqmgoECPPfaYJGngwIGqX7++UlJSJElPP/20YmNjNWXKFN1zzz1asmSJdu/erTlz5rjzMAAAgIdwe7jp37+/Tp06pVdeeUXZ2dlq166d1q5da180nJGRIS+v//+lrq5du2rx4sV66aWX9MILL+imm27SihUr1KpVK3cdAgAA8CBuDzeSNGLEiKuehtq8efMVbX379lXfvn3LuarS+fr6Kjk5+YpTXXA/xsYzMS6ei7HxTIzL9XP7RfwAAABcye23XwAAAHAlwg0AADAVwg0AADAVwg0AADAVwk0pZs2apcjISPn5+alz585KS0v7w/7Lli1Ts2bN5Ofnp9atW2vNmjUVVGnV48jYvPfee7rttttUq1Yt1apVS3FxcdccSzjH0b8zly1ZskQWi8V+EU+4lqPjcvbsWSUmJiosLEy+vr66+eab+fesnDg6NtOmTVPTpk3l7++viIgIPfPMM7pw4UIFVVsJGShhyZIlho+PjzF37lzj+++/N5588kkjKCjIyMnJKbX/V199ZXh7exuTJk0y9u/fb7z00ktG9erVjX379lVw5ebn6Ng8/PDDxqxZs4xvvvnGOHDggDF48GDDarUa//znPyu4cnNzdFwuO3bsmFG/fn3jtttuM3r37l0xxVYhjo7LxYsXjY4dOxq9evUytm3bZhw7dszYvHmzsXfv3gqu3PwcHZtFixYZvr6+xqJFi4xjx44Z69atM8LCwoxnnnmmgiuvPAg3/yE6OtpITEy0Py8uLjbCw8ONlJSUUvv369fPuOeee0q0de7c2XjqqafKtc6qyNGx+U+XLl0yAgICjA8//LC8SqySnBmXS5cuGV27djXef/99Y9CgQYSbcuDouLz77rtGo0aNjMLCwooqscpydGwSExONO+64o0RbUlKS0a1bt3KtszLj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\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# **Train Test Validation**"],"metadata":{"id":"hIOW3R4fLPdF"}},{"cell_type":"code","source":["# Teain Test Validation\n","train, valid, test = np.split(df.sample(frac=1), [int(0.6 * len(df)), int(0.8*len(df))])"],"metadata":{"id":"O4vltRZOAIXw","executionInfo":{"status":"ok","timestamp":1683262993783,"user_tz":-330,"elapsed":475,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["def scale_dataset(dataframe, oversample=False):\n","\n","  x = dataframe[dataframe.columns[:-1]].values\n","  y = dataframe[dataframe.columns[-1]].values\n","\n","  scaler = StandardScaler()\n","  x = scaler.fit_transform(x)\n","\n","  if oversample:\n","    ros = RandomOverSampler()\n","    x , y = ros.fit_resample(x,y)\n","\n","  data = np.hstack((x, np.reshape(y, (-1,1))))\n","\n","  return data, x, y"],"metadata":{"id":"gl6yIOBPSTYu","executionInfo":{"status":"ok","timestamp":1683262997205,"user_tz":-330,"elapsed":653,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["train, x_train, y_train = scale_dataset(train , oversample=True)\n","test, x_test, y_test = scale_dataset(test , oversample=False)\n","valid, x_valid, y_valid = scale_dataset(valid , oversample=False)"],"metadata":{"id":"QQFpeLHpXKFF","executionInfo":{"status":"ok","timestamp":1683263001019,"user_tz":-330,"elapsed":533,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["len(y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BrkL3K0jWLlW","executionInfo":{"status":"ok","timestamp":1683263003577,"user_tz":-330,"elapsed":634,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}},"outputId":"459f028b-2fee-4b71-e125-20e031916e91"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["14718"]},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["# **KNN - K Nearest Neighbour**"],"metadata":{"id":"HsPpl72wLhVs"}},{"cell_type":"code","source":["# K-Nearest Neighbour technique\n","\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.metrics import classification_report\n","\n","knn_model = KNeighborsClassifier(n_neighbors=3)\n","knn_model.fit(x_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"TmF21r7_ay9u","executionInfo":{"status":"ok","timestamp":1683263006771,"user_tz":-330,"elapsed":615,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}},"outputId":"3a96f5f4-57fb-4b13-f989-8d63c7da04b2"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KNeighborsClassifier(n_neighbors=3)"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=3)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier(n_neighbors=3)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["y_pred = knn_model.predict(x_test)"],"metadata":{"id":"bm3Nhv6ab0V_","executionInfo":{"status":"ok","timestamp":1683263010979,"user_tz":-330,"elapsed":346,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["print(classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RZVhZ9ZgchH5","executionInfo":{"status":"ok","timestamp":1683263020045,"user_tz":-330,"elapsed":420,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}},"outputId":"4fa386dd-79fa-4752-fbe1-32523f5bcba4"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.72      0.72      0.72      1330\n","           1       0.85      0.85      0.85      2474\n","\n","    accuracy                           0.81      3804\n","   macro avg       0.79      0.79      0.79      3804\n","weighted avg       0.81      0.81      0.81      3804\n","\n"]}]},{"cell_type":"markdown","source":["# **Naive Bayes**"],"metadata":{"id":"l7Rwul96LrBM"}},{"cell_type":"code","source":["#Naive Bayes\n","\n","from sklearn.naive_bayes import GaussianNB"],"metadata":{"id":"5FM38OwVylm5","executionInfo":{"status":"ok","timestamp":1683263022913,"user_tz":-330,"elapsed":589,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["nb_model = GaussianNB()\n","nb_model = nb_model.fit(x_train, y_train)"],"metadata":{"id":"yt_yQl8TzAwE","executionInfo":{"status":"ok","timestamp":1683263025504,"user_tz":-330,"elapsed":344,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["y_pred = knn_model.predict(x_test)\n","print(classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P2ULPGZ5za0m","executionInfo":{"status":"ok","timestamp":1683263028650,"user_tz":-330,"elapsed":631,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}},"outputId":"a6e84863-f077-4922-889a-7a61e1186d03"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.72      0.72      0.72      1330\n","           1       0.85      0.85      0.85      2474\n","\n","    accuracy                           0.81      3804\n","   macro avg       0.79      0.79      0.79      3804\n","weighted avg       0.81      0.81      0.81      3804\n","\n"]}]},{"cell_type":"markdown","source":["# **Logistic Regression**"],"metadata":{"id":"ZSSzRekkLzUQ"}},{"cell_type":"code","source":["# Logistic Regression\n","\n","from sklearn.linear_model import LogisticRegression\n","\n","lg_model = LogisticRegression()\n","lg_model = lg_model.fit(x_train, y_train)"],"metadata":{"id":"vzhgJhft2H1o","executionInfo":{"status":"ok","timestamp":1683263031608,"user_tz":-330,"elapsed":795,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["y_pred = lg_model.predict(x_test)\n","print(classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Li1sFCa_2iDj","executionInfo":{"status":"ok","timestamp":1683263034776,"user_tz":-330,"elapsed":4,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}},"outputId":"94b9c031-8343-41ba-fdd4-a6954b00282c"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.69      0.73      0.71      1330\n","           1       0.85      0.82      0.84      2474\n","\n","    accuracy                           0.79      3804\n","   macro avg       0.77      0.77      0.77      3804\n","weighted avg       0.79      0.79      0.79      3804\n","\n"]}]},{"cell_type":"markdown","source":["# **Support Vector Meachine**"],"metadata":{"id":"W0tE7Hy3L8Iy"}},{"cell_type":"code","source":["#Support Vector Meachine\n","\n","from sklearn.svm import SVC\n","\n","svm_model = SVC()\n","svm_model = svm_model.fit(x_train, y_train)"],"metadata":{"id":"hE_1A-RGznW8","executionInfo":{"status":"ok","timestamp":1683263045143,"user_tz":-330,"elapsed":7594,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["y_pred = svm_model.predict(x_test)\n","print(classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"abwM-42u0CkK","executionInfo":{"status":"ok","timestamp":1683263046378,"user_tz":-330,"elapsed":1282,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}},"outputId":"67eab5cb-294b-4753-a1ed-9f3fd1f52e6d"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.79      0.78      0.79      1330\n","           1       0.88      0.89      0.89      2474\n","\n","    accuracy                           0.85      3804\n","   macro avg       0.84      0.84      0.84      3804\n","weighted avg       0.85      0.85      0.85      3804\n","\n"]}]},{"cell_type":"markdown","source":["# **Natural Net**  *[few errors]*"],"metadata":{"id":"gggL5yOz4yf2"}},{"cell_type":"code","source":["# Natural Net --> Tensorflow\n","\n","import tensorflow as tf\n"],"metadata":{"id":"B9R7abZh0X9l","executionInfo":{"status":"ok","timestamp":1683263051307,"user_tz":-330,"elapsed":599,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["def plot_history(history):\n","  fig, (ax1, ax2) = plt.subplots(1,2, figuresize=(10, 4))\n","  ax1.plot(history.history['loss'], label='loss')\n","  ax1.plot(history.history['val_loss'], label='val_loss')\n","  ax1.set_xlabel('Epoch')\n","  ax1.set_ylabel('Binary crossentropy')\n","  ax1.grid(True)\n","\n","  ax2.plot(history.history['accuracy'], label='accuracy')\n","  ax2.plot(history.history['val_accuracy'], label='val_accuracy')\n","  ax2.set_xlabel('Epoch')\n","  ax2.set_ylabel('Accuracy')\n","  ax2.grid(True)\n","  \n","  plt.show()\n"],"metadata":{"id":"bhWfEusb42Mh","executionInfo":{"status":"ok","timestamp":1683263055394,"user_tz":-330,"elapsed":638,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":["def train_model(x_train, y_train, num_nodes, dropout_prob, lr, batch_size, epochs):\n","  nn_model = tf.keras.Sequential([\n","    tf.keras.layers.Dense(num_nodes, activation='relu', input_shape=(10,)),\n","    tf.keras.layers.Dropout(dropout_prob),\n","    tf.keras.layers.Dense(num_nodes, activation='relu'),\n","    tf.keras.layers.Dropout(dropout_prob),\n","    tf.keras.layers.Dense(1, activation='sigmoid')\n","    ])\n","  \n","  nn_model.compile(optimizer = tf.keras.optimizers.Adam(lr), loss='binary_crossentropy',\n","                 metrics = ['accuracy'])\n","  \n","  history = nn_model.fit(\n","    x_train, y_train, epochs = epochs, batch_size=batch_size, validation_split=0.2, verbose=0\n","    )\n","  \n","  return nn_model, history"],"metadata":{"id":"a8w_nWmv4Zz5","executionInfo":{"status":"ok","timestamp":1683263059875,"user_tz":-330,"elapsed":401,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["least_val_loss = float('inf')\n","least_loss_model = None\n","epochs = 100\n","for num_nodes in [16, 32, 64]:\n","  for dropout_prob in [0, 0.2]:\n","    for lr in [0.01, 0.005, 0.001]:\n","      for batch_size in [32,64,128]:\n","        print(f\"{num_nodes} nodes, dropout {dropout_prob}, lr {lr}, batch size {batch_size}\")\n","        model = train_model(x_train, y_train, num_nodes, dropout_prob, lr, batch_size, epochs)\n","        history = train_model(x_train, y_train, num_nodes, dropout_prob, lr, batch_size, epochs)\n","        plot_history(history)\n","        val_loss = model.evalute(x_valid, y_valid)[0]\n","        if val_loss < least_val_loss:\n","          least_val_loss = val_loss\n","          least_loss_model = model\n"],"metadata":{"id":"n_16CvU_7Acf","colab":{"base_uri":"https://localhost:8080/","height":397},"executionInfo":{"status":"error","timestamp":1683263230079,"user_tz":-330,"elapsed":167033,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}},"outputId":"8c31a934-0b25-4164-d34c-dc1f5cf52c64"},"execution_count":43,"outputs":[{"output_type":"stream","name":"stdout","text":["16 nodes, dropout 0, lr 0.01, batch size 32\n"]},{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-43-4bc174664283>\u001b[0m in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      9\u001b[0m         \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtrain_model\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnum_nodes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdropout_prob\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch_size\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m         \u001b[0mhistory\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtrain_model\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnum_nodes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdropout_prob\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch_size\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 11\u001b[0;31m         \u001b[0mplot_history\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     12\u001b[0m         \u001b[0mval_loss\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mevalute\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_valid\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_valid\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mval_loss\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0mleast_val_loss\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-41-3ce4e1ef7f82>\u001b[0m in \u001b[0;36mplot_history\u001b[0;34m(history)\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mplot_history\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m   \u001b[0mfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0max1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0max2\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msubplots\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfiguresize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m4\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m   \u001b[0max1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'loss'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'loss'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m   \u001b[0max1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'val_loss'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'val_loss'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m   \u001b[0max1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_xlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Epoch'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/pyplot.py\u001b[0m in \u001b[0;36msubplots\u001b[0;34m(nrows, ncols, sharex, sharey, squeeze, width_ratios, height_ratios, subplot_kw, gridspec_kw, **fig_kw)\u001b[0m\n\u001b[1;32m   1499\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1500\u001b[0m     \"\"\"\n\u001b[0;32m-> 1501\u001b[0;31m     \u001b[0mfig\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mfig_kw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1502\u001b[0m     axs = fig.subplots(nrows=nrows, ncols=ncols, sharex=sharex, sharey=sharey,\n\u001b[1;32m   1503\u001b[0m                        \u001b[0msqueeze\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msqueeze\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msubplot_kw\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msubplot_kw\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/_api/deprecation.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    452\u001b[0m                 \u001b[0;34m\"parameter will become keyword-only %(removal)s.\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    453\u001b[0m                 name=name, obj_type=f\"parameter of {func.__name__}()\")\n\u001b[0;32m--> 454\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    455\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    456\u001b[0m     \u001b[0;31m# Don't modify *func*'s signature, as boilerplate.py needs it.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/pyplot.py\u001b[0m in \u001b[0;36mfigure\u001b[0;34m(num, figsize, dpi, facecolor, edgecolor, frameon, FigureClass, clear, **kwargs)\u001b[0m\n\u001b[1;32m    838\u001b[0m                 RuntimeWarning)\n\u001b[1;32m    839\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 840\u001b[0;31m         manager = new_figure_manager(\n\u001b[0m\u001b[1;32m    841\u001b[0m             \u001b[0mnum\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdpi\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdpi\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    842\u001b[0m             \u001b[0mfacecolor\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfacecolor\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0medgecolor\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0medgecolor\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mframeon\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mframeon\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/pyplot.py\u001b[0m in \u001b[0;36mnew_figure_manager\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    382\u001b[0m     \u001b[0;34m\"\"\"Create a new figure manager instance.\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    383\u001b[0m     \u001b[0m_warn_if_gui_out_of_main_thread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 384\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_get_backend_mod\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnew_figure_manager\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    385\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    386\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib_inline/backend_inline.py\u001b[0m in \u001b[0;36mnew_figure_manager\u001b[0;34m(num, FigureClass, *args, **kwargs)\u001b[0m\n\u001b[1;32m     25\u001b[0m     \u001b[0mThis\u001b[0m \u001b[0mfunction\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0mpart\u001b[0m \u001b[0mof\u001b[0m \u001b[0mthe\u001b[0m \u001b[0mAPI\u001b[0m \u001b[0mexpected\u001b[0m \u001b[0mby\u001b[0m \u001b[0mMatplotlib\u001b[0m \u001b[0mbackends\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     26\u001b[0m     \"\"\"\n\u001b[0;32m---> 27\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mnew_figure_manager_given_figure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnum\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mFigureClass\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     28\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     29\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/_api/deprecation.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    452\u001b[0m                 \u001b[0;34m\"parameter will become keyword-only %(removal)s.\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    453\u001b[0m                 name=name, obj_type=f\"parameter of {func.__name__}()\")\n\u001b[0;32m--> 454\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    455\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    456\u001b[0m     \u001b[0;31m# Don't modify *func*'s signature, as boilerplate.py needs it.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/figure.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, figsize, dpi, facecolor, edgecolor, linewidth, frameon, subplotpars, tight_layout, constrained_layout, layout, **kwargs)\u001b[0m\n\u001b[1;32m   2468\u001b[0m             \u001b[0;34m%\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mFigure\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0mkwdoc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2469\u001b[0m         \"\"\"\n\u001b[0;32m-> 2470\u001b[0;31m         \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2471\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_layout_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2472\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/figure.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, **kwargs)\u001b[0m\n\u001b[1;32m    201\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstale\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    202\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msuppressComposite\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 203\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    204\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    205\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_get_draw_artists\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrenderer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36m<lambda>\u001b[0;34m(self, **kwargs)\u001b[0m\n\u001b[1;32m    145\u001b[0m             \u001b[0;32mreturn\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    146\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 147\u001b[0;31m         \u001b[0mcls\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mlambda\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mArtist\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    148\u001b[0m         \u001b[0mcls\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__name__\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"set\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    149\u001b[0m         \u001b[0mcls\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__qualname__\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34mf\"{cls.__qualname__}.set\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36mset\u001b[0;34m(self, **kwargs)\u001b[0m\n\u001b[1;32m   1229\u001b[0m         \u001b[0;31m# Artist._update_set_signature_and_docstring() at the end of the\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1230\u001b[0m         \u001b[0;31m# module.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1231\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_internal_update\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcbook\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnormalize_kwargs\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1232\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1233\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mcontextlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcontextmanager\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36m_internal_update\u001b[0;34m(self, kwargs)\u001b[0m\n\u001b[1;32m   1221\u001b[0m         \u001b[0mThe\u001b[0m \u001b[0mlack\u001b[0m \u001b[0mof\u001b[0m \u001b[0mprenormalization\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0mto\u001b[0m \u001b[0mmaintain\u001b[0m \u001b[0mbackcompatibility\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1222\u001b[0m         \"\"\"\n\u001b[0;32m-> 1223\u001b[0;31m         return self._update_props(\n\u001b[0m\u001b[1;32m   1224\u001b[0m             \u001b[0mkwargs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"{cls.__name__}.set() got an unexpected keyword argument \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1225\u001b[0m             \"{prop_name!r}\")\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36m_update_props\u001b[0;34m(self, props, errfmt)\u001b[0m\n\u001b[1;32m   1195\u001b[0m                     \u001b[0mfunc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34mf\"set_{k}\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1196\u001b[0m                     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mcallable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1197\u001b[0;31m                         raise AttributeError(\n\u001b[0m\u001b[1;32m   1198\u001b[0m                             errfmt.format(cls=type(self), prop_name=k))\n\u001b[1;32m   1199\u001b[0m                     \u001b[0mret\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mv\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: Figure.set() got an unexpected keyword argument 'figuresize'"]}]},{"cell_type":"code","source":["y_pred = least_loss_model.predict(x_test)\n","y_pred = (y_pred>0.5).astype(int).reshape(-1,)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":183},"id":"hGByQX5M7IJG","executionInfo":{"status":"error","timestamp":1683263252292,"user_tz":-330,"elapsed":625,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}},"outputId":"d9bad81b-085b-457a-b0d4-f2cb17096519"},"execution_count":44,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-44-8ebc6af9941e>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0my_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mleast_loss_model\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0my_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0my_pred\u001b[0m\u001b[0;34m>\u001b[0m\u001b[0;36m0.5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreshape\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: 'NoneType' object has no attribute 'predict'"]}]},{"cell_type":"code","source":["print(classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EC__D3gnB71N","executionInfo":{"status":"ok","timestamp":1683263256320,"user_tz":-330,"elapsed":356,"user":{"displayName":"Akash K K","userId":"07019796028786924211"}},"outputId":"95df3b11-bf34-4421-cce3-b5b97657f857"},"execution_count":45,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.79      0.78      0.79      1330\n","           1       0.88      0.89      0.89      2474\n","\n","    accuracy                           0.85      3804\n","   macro avg       0.84      0.84      0.84      3804\n","weighted avg       0.85      0.85      0.85      3804\n","\n"]}]}]}